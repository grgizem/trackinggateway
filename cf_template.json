{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Track - Lambda and API Gateway",
  "Parameters": {
    "S3Bucket": {
      "Description": "The name of the S3 bucket that contains the source code of Lambda function.",
      "Type": "String"
    },
    "S3Key": {
      "Description": "The location and name of the source code .zip file.",
      "Type": "String",
      "Default": "lambda.zip"
    }
  },
  "Resources": {
    "TrackTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "client_id",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "client_id",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "track"
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                 "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        }, {
          "PolicyName": "dynamodb",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Sid": "1",
              "Effect": "Allow",
              "Action": ["dynamodb:Scan", "dynamodb:PutItem", "dynamodb:GetItem", "dynamodb:DeleteItem", "dynamodb:Query", "dynamodb:UpdateItem"],
              "Resource": [
                {"Fn::Join" : ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/track*"]]}
              ]
            }]
          }
        }]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "S3Bucket"},
          "S3Key": {"Ref": "S3Key"}
        },
        "Description": "Tracking Function",
        "Handler": "lambda.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "python3.6",
        "Timeout": 3
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {"Fn::GetAtt": ["Lambda", "Arn"]},
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "LambdaSimpleProxy"}, "/*"]]}
      }
    },

    "LambdaSimpleProxy": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Tracking Gateway"
      }
    },

    "TrackModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "ContentType": "application/json",
        "Name": "Track",
        "RestApiId": {"Ref": "LambdaSimpleProxy"},
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "Track",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "client_id": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
      	    "price": {
      	      "type": "string"
      	    },
      	    "currency": {
      	      "type": "string"
      	    },
      	    "date": {
      	      "type": "string"
      	    }
          },
          "required": ["client_id", "origin", "destination", "price", "currency", "date"]
        }
      }
    },

    "TrackResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": { "Ref":"LambdaSimpleProxy"},
        "ParentId": { "Fn::GetAtt" : [
          "LambdaSimpleProxy",
          "RootResourceId"
        ]},
        "PathPart": "track.gif"
      }
    },
    "TrackSaveValidator": {
      "Type" : "AWS::ApiGateway::RequestValidator",
      "Properties" : {
        "Name": "Track Validation",
        "RestApiId": {"Ref": "LambdaSimpleProxy"},
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true
      }
    },
    "TrackGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {"Ref":"LambdaSimpleProxy"},
        "ResourceId": {"Ref":"TrackResource"},
        "HttpMethod": "GET",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Join" : ["", ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["Lambda", "Arn"]}, "/invocations"]]}
        },
        "RequestParameters": {
          "method.request.querystring.client_id": true,
          "method.request.querystring.origin": true,
          "method.request.querystring.destination": true,
          "method.request.querystring.price": true,
          "method.request.querystring.currency": true,
          "method.request.querystring.date": true
        },
        "RequestValidatorId": {"Ref": "TrackSaveValidator"},
        "MethodResponses": [{
          "ResponseModels": {
            "image/gif": {"Ref": "TrackModel"}
          },
          "ResponseParameters": {
            "method.response.header.Link": true
          },
          "StatusCode": 200
        }]
      }
    }
  }
}